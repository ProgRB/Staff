select TP.PROJECT_TRANSFER_ID, 
	CASE WHEN TP.TYPE_TRANSFER_ID != 1 or 
			(TP.TYPE_TRANSFER_ID = 1 and EXISTS(SELECT NULL FROM {0}.TRANSFER T WHERE T.PER_NUM = TP.PER_NUM))
		THEN TP.PER_NUM 
	END	VISUAL_PER_NUM,
	TP.PER_NUM, E.EMP_LAST_NAME, E.EMP_FIRST_NAME, E.EMP_MIDDLE_NAME,
    E.EMP_SEX, E.EMP_BIRTH_DATE,
    SUBDIV_ID, (SELECT S.CODE_SUBDIV FROM {0}.SUBDIV S WHERE S.SUBDIV_ID = TP.SUBDIV_ID) CODE_SUBDIV,
    POS_ID, (SELECT P.CODE_POS FROM {0}.POSITION P WHERE P.POS_ID = TP.POS_ID) CODE_POS,
    (SELECT P.POS_NAME FROM {0}.POSITION P WHERE P.POS_ID = TP.POS_ID) POS_NAME,
    POS_NOTE, DATE_HIRE, SIGN_COMB, DECODE(SIGN_COMB,1,'X') COMB, TYPE_TRANSFER_ID, 
    (SELECT TTR.TYPE_TRANSFER_NAME FROM {0}.TYPE_TRANSFER TTR 
    WHERE TTR.TYPE_TRANSFER_ID = TP.TYPE_TRANSFER_ID) TYPE_TRANSFER_NAME,
    DATE_TRANSFER, DATE_END_CONTR, TR_NUM_ORDER, TR_DATE_ORDER, TP.FORM_PAY,
    (SELECT FP.NAME_FORM_PAY FROM {0}.FORM_PAY FP WHERE FP.FORM_PAY = TP.FORM_PAY) NAME_FORM_PAY,
    DEGREE_ID, (SELECT D.CODE_DEGREE FROM {0}.DEGREE D WHERE D.DEGREE_ID = TP.DEGREE_ID) CODE_DEGREE,
    FROM_POSITION, CONTR_EMP, DATE_CONTR, DF_BOOK_ORDER, TP.SIGN_CUR_WORK, TP.PROBA_PERIOD,
    SOURCE_ID, FORM_OPERATION_ID, 
    (SELECT FO.CODE_FORM_OPERATION FROM {0}.FORM_OPERATION FO WHERE FO.FORM_OPERATION_ID = TP.FORM_OPERATION_ID) CODE_FORM_OPERATION,
    (SELECT FO.NAME_FORM_OPERATION FROM {0}.FORM_OPERATION FO WHERE FO.FORM_OPERATION_ID = TP.FORM_OPERATION_ID) NAME_FORM_OPERATION,
    HARMFUL_VAC, ADDITIONAL_VAC, WORKER_ID, HARMFUL_ADDITION_ADD, COMB_ADDITION, COMB_ADDITION_NOTE, 
    SALARY, CLASSIFIC, TARIFF_GRID_ID, SECRET_ADDITION, SECRET_ADDITION_NOTE, SIGN_MAT_RESP_CONTR,
    OTHER_LIABILITY_BOSS, WORKING_TIME_ID, WORKING_TIME_COMMENT, CHAR_WORK_ID, HIRE_SIGN, CHAN_SIGN,
	CHAR_TRANSFER_ID, TAX_CODE, DATE_SERVANT, PROF_ADDITION, PERCENT13, SIGN_ADD, DATE_ADD, 
	COUNT_DEP14, COUNT_DEP15, COUNT_DEP16, COUNT_DEP17, COUNT_DEP18, COUNT_DEP19, COUNT_DEP20, COUNT_DEP21,
	CLASS_ADDITION, CHIEF_ADDITION, SUM_YOUNG_SPEC, DATE_END_YOUNG_SPEC, DATE_ADD_AGREE, TRIP_ADDITION, 
	SERVICE_ADD, SALARY_MISSION, WATER_PROC, GOVSECRET_ADDITION, PREMIUM_CALC_GROUP_ID,
	ENCODING_ADDITION, TRANSFER_ID, SIGN_RESUME
from {0}.PROJECT_TRANSFER TP
join {0}.EMP E on (TP.PER_NUM = E.PER_NUM)
WHERE TP.PROJECT_TRANSFER_ID = :p_PROJECT_TRANSFER_ID