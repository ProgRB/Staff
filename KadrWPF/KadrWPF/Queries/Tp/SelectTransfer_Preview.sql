select T.PER_NUM, T.POS_NOTE, T.PROBA_PERIOD, AD.CLASSIFIC, AD.SALARY, T.DATE_TRANSFER, AD.TARIFF_GRID_ID, 
    AD.COMB_ADDITION, PT.COMB_ADDITION_NOTE, AD.SECRET_ADDITION, PT.SECRET_ADDITION_NOTE, AD.HARMFUL_ADDITION_ADD,
    (select P.CODE_POS||' ('||P.POS_NAME||')' FROM APSTAFF.POSITION P WHERE P.POS_ID = T.POS_ID) DISP_POSITION,
    (SELECT D.CODE_DEGREE||' ('||D.DEGREE_NAME||')' FROM APSTAFF.DEGREE D WHERE D.DEGREE_ID = T.DEGREE_ID) DISP_DEGREE,
    (SELECT NAME_FORM_PAY FROM APSTAFF.FORM_PAY FP WHERE FP.FORM_PAY = T.FORM_PAY) NAME_FORM_PAY,
    (SELECT NAME_FORM_OPERATION FROM APSTAFF.FORM_OPERATION FO WHERE FO.FORM_OPERATION_ID = T.FORM_OPERATION_ID) DISP_FORM_OPERATION,
    (SELECT TG.CODE_TARIFF_GRID FROM APSTAFF.TARIFF_GRID TG WHERE TG.TARIFF_GRID_ID = AD.TARIFF_GRID_ID) CODE_TARIFF_GRID,
    (SELECT WORKING_TIME_NAME FROM APSTAFF.WORKING_TIME WT 
    WHERE WT.WORKING_TIME_ID = PT.WORKING_TIME_ID) WORKING_TIME_NAME,
    PT.WORKING_TIME_COMMENT, T.HARMFUL_VAC, T.ADDITIONAL_VAC, PT.OTHER_LIABILITY_BOSS, 
    DECODE(T.TYPE_TRANSFER_ID,1,1) SIGN_HIRE, DECODE(T.TYPE_TRANSFER_ID,2,1) SIGN_TRANSFER,
    TT_PREV.TERM_TRANSFER_ID TERM_TRANSFER_ID_PREV,
	TT_PREV.TYPE_TERM_TRANSFER_ID TYPE_TERM_TRANSFER_ID_PREV, 
	TT_PREV.DATE_TERM_TRANSFER DATE_TERM_TRANSFER_PREV, 
    TT_PREV.BASE_TERM_TRANSFER_ID BASE_TERM_TRANSFER_ID_PREV,
	T.TYPE_TRANSFER_ID, NVL(PT.SIGN_MAT_RESP_CONTR,0) SIGN_MAT_RESP_CONTR, PT.PROJECT_TRANSFER_ID,
    NVL(SIGN_MILK,0) SIGN_MILK, NVL(SIGN_PREVENTIVE_NUTRITION,0) SIGN_PREVENTIVE_NUTRITION, 
	AD.PRIVILEGED_POSITION_ID,
	NVL2(AD.PRIVILEGED_POSITION_ID,1,NVL(SIGN_PREFERENTIAL_PENS,0)) SIGN_PREFERENTIAL_PENS, 
	(select SPECIAL_CONDITIONS from apstaff.PRIVILEGED_POSITION PP 
	where PP.PRIVILEGED_POSITION_ID = AD.PRIVILEGED_POSITION_ID) SPECIAL_CONDITIONS,
	(select KPS from apstaff.PRIVILEGED_POSITION PP 
	where PP.PRIVILEGED_POSITION_ID = AD.PRIVILEGED_POSITION_ID) KPS
from APSTAFF.TRANSFER T
join APSTAFF.ACCOUNT_DATA AD on (AD.TRANSFER_ID = DECODE(T.TYPE_TRANSFER_ID,3,T.FROM_POSITION,T.TRANSFER_ID))
left join APSTAFF.PROJECT_TRANSFER PT on (T.TRANSFER_ID = PT.TRANSFER_ID)
left join APSTAFF.TERM_TRANSFER TT_PREV 
	on (T.TRANSFER_ID = TT_PREV.TRANSFER_ID and TT_PREV.TYPE_TERM = DECODE(T.TYPE_TRANSFER_ID,1,1,2,2))
left join APSTAFF.PROJECT_ADD_CONDITION PAC on PT.PROJECT_TRANSFER_ID = PAC.PROJECT_TRANSFER_ID
where T.TRANSFER_ID = :p_TRANSFER_ID