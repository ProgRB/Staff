with SUBD as 
    (select SUBDIV_ID FROM {0}.SUBDIV
        start with subdiv_id in (
            select subdiv_id from {0}.access_subdiv 
            where upper(user_name) = ora_login_user and upper(app_name) = 'KADR' AND                                 
                SYSDATE BETWEEN NVL(date_start_access, DATE '1000-01-01') AND NVL(date_end_access, DATE '3000-01-01'))
        connect by prior subdiv_id = parent_id)
select PT.PROJECT_TRANSFER_ID, 
	CASE WHEN PT.TYPE_TRANSFER_ID != 1 or 
			(PT.TYPE_TRANSFER_ID = 1 and EXISTS(SELECT NULL FROM {0}.TRANSFER T WHERE T.PER_NUM = PT.PER_NUM))
		THEN PT.PER_NUM 
	END	VISUAL_PER_NUM,
	PT.PER_NUM, E.EMP_LAST_NAME, E.EMP_FIRST_NAME, E.EMP_MIDDLE_NAME,
    E.EMP_SEX, E.EMP_BIRTH_DATE, E.PERCO_SYNC_ID,
	T.SUBDIV_ID PREV_SUBDIV_ID,
	(SELECT S.CODE_SUBDIV FROM {0}.SUBDIV S WHERE S.SUBDIV_ID = T.SUBDIV_ID) PREV_CODE_SUBDIV,
    PT.SUBDIV_ID, (SELECT S.CODE_SUBDIV FROM {0}.SUBDIV S WHERE S.SUBDIV_ID = PT.SUBDIV_ID) CODE_SUBDIV,
    PT.POS_ID, (SELECT P.CODE_POS FROM {0}.POSITION P WHERE P.POS_ID = PT.POS_ID) CODE_POS,
    (SELECT P.POS_NAME FROM {0}.POSITION P WHERE P.POS_ID = PT.POS_ID) POS_NAME,
    PT.POS_NOTE, PT.DATE_HIRE, PT.SIGN_COMB, DECODE(PT.SIGN_COMB,1,'X') COMB, PT.TYPE_TRANSFER_ID, 
    (SELECT TTR.TYPE_TRANSFER_NAME FROM {0}.TYPE_TRANSFER TTR 
    WHERE TTR.TYPE_TRANSFER_ID = PT.TYPE_TRANSFER_ID) TYPE_TRANSFER_NAME,
    PT.DATE_TRANSFER, PT.DATE_END_CONTR, PT.TR_NUM_ORDER, PT.TR_DATE_ORDER, PT.FORM_PAY,
    (SELECT FP.NAME_FORM_PAY FROM {0}.FORM_PAY FP WHERE FP.FORM_PAY = PT.FORM_PAY) NAME_FORM_PAY,
    PT.DEGREE_ID, (SELECT D.CODE_DEGREE FROM {0}.DEGREE D WHERE D.DEGREE_ID = PT.DEGREE_ID) CODE_DEGREE,
    PT.FROM_POSITION, PT.CONTR_EMP, PT.DATE_CONTR, PT.DF_BOOK_ORDER, PT.SIGN_CUR_WORK, PT.PROBA_PERIOD,
    PT.SOURCE_ID, PT.FORM_OPERATION_ID, 
	(select SOURCE_EMPLOYABILITY_ID from {0}.PER_DATA PD where PD.PER_NUM = E.PER_NUM) SOURCE_EMPLOYABILITY_ID,
    (SELECT FO.CODE_FORM_OPERATION FROM {0}.FORM_OPERATION FO WHERE FO.FORM_OPERATION_ID = PT.FORM_OPERATION_ID) CODE_FORM_OPERATION,
    (SELECT FO.NAME_FORM_OPERATION FROM {0}.FORM_OPERATION FO WHERE FO.FORM_OPERATION_ID = PT.FORM_OPERATION_ID) NAME_FORM_OPERATION,
    PT.HARMFUL_VAC, PT.ADDITIONAL_VAC, PT.WORKER_ID, HARMFUL_ADDITION_ADD, COMB_ADDITION, COMB_ADDITION_NOTE, 
    SALARY, CLASSIFIC, TARIFF_GRID_ID, 
	(SELECT CODE_TARIFF_GRID FROM {0}.TARIFF_GRID TG WHERE TG.TARIFF_GRID_ID = PT.TARIFF_GRID_ID) CODE_TARIFF_GRID,
	SECRET_ADDITION, SECRET_ADDITION_NOTE, SIGN_MAT_RESP_CONTR,
    OTHER_LIABILITY_BOSS, WORKING_TIME_ID, WORKING_TIME_COMMENT, PT.CHAR_WORK_ID, PT.HIRE_SIGN, PT.CHAN_SIGN,
	PT.CHAR_TRANSFER_ID, TAX_CODE, DATE_SERVANT, PROF_ADDITION, PERCENT13, SIGN_ADD, DATE_ADD, 
	COUNT_DEP14, COUNT_DEP15, COUNT_DEP16, COUNT_DEP17, COUNT_DEP18, COUNT_DEP19, COUNT_DEP20, COUNT_DEP21,
	CLASS_ADDITION, CHIEF_ADDITION, SUM_YOUNG_SPEC, DATE_END_YOUNG_SPEC, DATE_ADD_AGREE, TRIP_ADDITION, 
	SERVICE_ADD, SALARY_MISSION, WATER_PROC, GOVSECRET_ADDITION, PREMIUM_CALC_GROUP_ID,
	ENCODING_ADDITION, PT.TRANSFER_ID, SIGN_RESUME, PROJECT_PLAN_APPROVAL_ID, PT.GR_WORK_ID, 
	PT.BASE_DOC_ID, PT.REASON_ID, PT.BASE_DOC_NOTE,
	CASE WHEN EXISTS(SELECT NULL FROM {0}.MAT_RESP_PERSON MRP WHERE MRP.PER_NUM = PT.PER_NUM) 
		THEN 1 ELSE 0 
	END as SIGN_MAT_RESP_PERSON,
    CASE WHEN PROJECT_PLAN_APPROVAL_ID = (select MAX(PROJECT_PLAN_APPROVAL_ID) from {0}.PROJECT_PLAN_APPROVAL
											where TYPE_TRANSFER_ID = PT.TYPE_TRANSFER_ID)
        THEN 1 ELSE 0 
    END as SIGN_FULL_APPROVAL,
    /* Если подразделение в проекте попадает в доступные, то открываем редактирование */
    /* 04.04.2016 - убираю данную проверку, так как она была сделана для скрытия данных при согласовании в старом подразделении.
		Однако, данную процедуру согласования убрали и согласование начинается сразу в новом подразделении
		CASE WHEN PT.SUBDIV_ID in (select SUBDIV_ID FROM SUBD) THEN 1 ELSE 0 END */
	1 SIGN_OPEN_EDIT,
	CASE WHEN EXISTS(SELECT NULL FROM {0}.PROJECT_APPROVAL PA 
					WHERE PA.PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID) 
		THEN 1 ELSE 0 
    END as SIGN_EXIST_APPROVAL, 
    CASE WHEN PT.TRANSFER_ID is not null and 
            NOT EXISTS(SELECT NULL FROM {0}.PROJECT_APPROVAL PA JOIN {0}.TYPE_APPROVAL TA USING(TYPE_APPROVAL_ID)
                        WHERE PA.PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID and TA.SIGN_REGISTRATION_PROJECT = 1)
        THEN 1 ELSE 0 
    END as SIGN_NO_REGISTRATION,
	CASE WHEN EXISTS(SELECT NULL FROM {0}.TRANSFER_QM TQM WHERE TQM.PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID)
        THEN 1 ELSE 0 
    END as SIGN_TRANSFER_QM
from {0}.PROJECT_TRANSFER PT
join {0}.EMP E on (PT.PER_NUM = E.PER_NUM)
LEFT JOIN {0}.TRANSFER T ON (T.TRANSFER_ID = PT.FROM_POSITION) 
/* Выбираем сотрудников, которые переводятся в данное подразделение и у них уже прошло согласование 
    в предыдущем подразделении, а так же тех, кто уходит из подразделения, чтобы проставить согласование*/
WHERE (((PT.SUBDIV_ID in (select SUBDIV_ID FROM SUBD)
		or (exists(select null from user_role_privs where granted_role =  'STAFF_VIEW_ECON_SERVICE') and PT.FORM_OPERATION_ID = 9)
		or (exists(select null from user_role_privs where granted_role =  'STAFF_VIEW_QM')
            and exists(select null from {0}.TRANSFER_QM TQM where TQM.PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID)))
            AND PT.PROJECT_PLAN_APPROVAL_ID in 
                (SELECT PPA.PROJECT_PLAN_APPROVAL_ID FROM {0}.PROJECT_PLAN_APPROVAL PPA
                WHERE PPA.SIGN_APPROVAL_OLD_SUBDIV = 0))
        or 
        (T.SUBDIV_ID in (select SUBDIV_ID FROM SUBD)
            and PT.PROJECT_PLAN_APPROVAL_ID in 
                (SELECT PPA.PROJECT_PLAN_APPROVAL_ID FROM {0}.PROJECT_PLAN_APPROVAL PPA
                WHERE PPA.SIGN_APPROVAL_OLD_SUBDIV = 1)))
	and PT.PROJECT_TRANSFER_ID = NVL(:p_PROJECT_TRANSFER_ID,PT.PROJECT_TRANSFER_ID) 
	and (PT.TRANSFER_ID is null 
        or (PT.TRANSFER_ID is not null and 
            exists(select null from user_role_privs where GRANTED_ROLE = 'STAFF_ECON_DEPT')
            and not exists(SELECT NULL FROM {0}.PROJECT_APPROVAL PA 
                        JOIN {0}.TYPE_APPROVAL TA USING(TYPE_APPROVAL_ID)
                        WHERE PA.PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID and TA.SIGN_REGISTRATION_PROJECT = 1)))
	/* по этим параметрам обновляем строки, поменявшие статус согласования */
	and (:p_SIGN_NOTIFICATION = 0 or (:p_SIGN_NOTIFICATION = 1 and 
			PT.ROWID in (select CHARTOROWID(COLUMN_VALUE) from TABLE(:p_TABLE_ID))))
	and PROJECT_PLAN_APPROVAL_ID > -1