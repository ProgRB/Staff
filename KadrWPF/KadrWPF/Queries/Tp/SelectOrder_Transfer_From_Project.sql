with APPR as (
        select *
        from {0}.PROJECT_APPROVAL PA 
        join {0}.PROJECT_PLAN_APPROVAL PPA using(PROJECT_PLAN_APPROVAL_ID)
        where PA.PROJECT_TRANSFER_ID = :p_PROJECT_TRANSFER_ID),
	TERM as ( 
    select TYPE_TERM, SIGN_BASE_TEMP_TRANSFER, SIGN_REPL_EMP, BASE_TERM_TRANSFER_NAME, DATE_TERM_TRANSFER,
        (select LISTAGG((select E.EMP_LAST_NAME||' '||Substr(E.EMP_FIRST_NAME,1,1)||'.'||Substr(E.EMP_MIDDLE_NAME,1,1) 
                        from {0}.EMP E join {0}.TRANSFER T using(PER_NUM) 
                        where T.TRANSFER_ID = LRE.TRANSFER_ID), ',') 
            WITHIN GROUP(ORDER BY LRE.ORDER_REPL_EMP) 
        FROM {0}.PROJECT_LIST_REPL_EMP LRE     
        WHERE LRE.PROJECT_TERM_TRANSFER_ID = PTT.PROJECT_TERM_TRANSFER_ID) LIST_REPL_EMP
    from {0}.PROJECT_TERM_TRANSFER PTT 
    LEFT JOIN {0}.TYPE_TERM_TRANSFER TTT using(TYPE_TERM_TRANSFER_ID)
    LEFT JOIN {0}.BASE_TERM_TRANSFER BTT using(BASE_TERM_TRANSFER_ID)
    WHERE PTT.PROJECT_TRANSFER_ID = :p_PROJECT_TRANSFER_ID and TYPE_TERM = 2
    )
select E.PER_NUM, E.EMP_LAST_NAME, E.EMP_FIRST_NAME, E.EMP_MIDDLE_NAME,
    PT.TR_NUM_ORDER, PT.TR_DATE_ORDER, PT.DATE_HIRE, PT.DATE_TRANSFER,
	/*(select DATE_TERM_TRANSFER from APSTAFF.PROJECT_TERM_TRANSFER PTT
	where PROJECT_TRANSFER_ID = PT.PROJECT_TRANSFER_ID and TYPE_TERM = 2) DATE_END_CONTR,*/
	(SELECT DATE_TERM_TRANSFER FROM TERM) DATE_TERM_TRANSFER,
	(SELECT LIST_REPL_EMP FROM TERM) LIST_REPL_EMP,
    (select S.CODE_SUBDIV from {0}.SUBDIV S where S.SUBDIV_ID = PT.SUBDIV_ID) CODE_SUBDIV,
    (select S.SUBDIV_NAME from {0}.SUBDIV S where S.SUBDIV_ID = PT.SUBDIV_ID) SUBDIV_NAME,
    (select P.POS_NAME from {0}.POSITION P where P.POS_ID = PT.POS_ID) POS_NAME,
	PT.POS_NOTE, '' as POS1, '' as POS2, '' as POS3,
    (select P.CODE_POS from {0}.POSITION P where P.POS_ID = PT.POS_ID) CODE_POS,
    PT.CLASSIFIC, PT.SALARY,
    (select TG.CODE_TARIFF_GRID from {0}.TARIFF_GRID TG 
	where TG.TARIFF_GRID_ID = PT.TARIFF_GRID_ID) CODE_TARIFF_GRID,
    Rtrim(CASE WHEN PT.COMB_ADDITION > 0 THEN ' совмещение - '||PT.COMB_ADDITION||';' ELSE '' END ||
        CASE WHEN PT.HARMFUL_ADDITION_ADD > 0 THEN ' вредность доп. - '||PT.HARMFUL_ADDITION_ADD||';' ELSE '' END, ';')
    NOTE_ADDITION_BY_HIRE, PT.COMB_ADDITION, PT.HARMFUL_ADDITION_ADD,
    (select FP.NAME_FORM_PAY from {0}.FORM_PAY FP where FP.FORM_PAY = PT.FORM_PAY) NAME_FORM_PAY,
    (select D.CODE_DEGREE from {0}.DEGREE D where D.DEGREE_ID = PT.DEGREE_ID) CODE_DEGREE,
    (select D.DEGREE_NAME from {0}.DEGREE D where D.DEGREE_ID = PT.DEGREE_ID) DEGREE_NAME,
	(select F.CODE_FORM_OPERATION from {0}.FORM_OPERATION F 
	where F.FORM_OPERATION_ID = PT.FORM_OPERATION_ID) CODE_FORM_OPERATION,
    PT.SIGN_ADD, PT.DATE_ADD, PT.PROBA_PERIOD, PT.CONTR_EMP, PT.DATE_CONTR,    
    (select S.CODE_SUBDIV from {0}.SUBDIV S where S.SUBDIV_ID = TR.SUBDIV_ID) PREV_CODE_SUBDIV,
    (select P.POS_NAME from {0}.POSITION P where P.POS_ID = TR.POS_ID) PREV_POS_NAME,
    TR.POS_NOTE PREV_POS_NOTE, '' as PREV_POS1, '' as PREV_POS2, '' as PREV_POS3,
    (select P.CODE_POS from {0}.POSITION P where P.POS_ID = TR.POS_ID) PREV_CODE_POS,
    AD.CLASSIFIC PREV_CLASSIFIC, AD.SALARY PREV_SALARY, AD.COMB_ADDITION PREV_COMB_ADDITION,
	AD.HARMFUL_ADDITION_ADD PREV_HARMFUL_ADDITION_ADD,
    (select FP.NAME_FORM_PAY from {0}.FORM_PAY FP where FP.FORM_PAY = TR.FORM_PAY) PREV_NAME_FORM_PAY,
    (select D.CODE_DEGREE from {0}.DEGREE D where D.DEGREE_ID = TR.DEGREE_ID) PREV_CODE_DEGREE, 
	(select D.DEGREE_NAME from {0}.DEGREE D where D.DEGREE_ID = TR.DEGREE_ID) PREV_DEGREE_NAME,
	(select F.CODE_FORM_OPERATION from {0}.FORM_OPERATION F 
	where F.FORM_OPERATION_ID = TR.FORM_OPERATION_ID) PREV_CODE_FORM_OPERATION,
	(select TG.CODE_TARIFF_GRID from {0}.TARIFF_GRID TG 
	where TG.TARIFF_GRID_ID = AD.TARIFF_GRID_ID) PREV_CODE_TARIFF_GRID,
	(select DISTINCT FIRST_VALUE((SELECT EMP_LAST_NAME||' '||SUBSTR(EMP_FIRST_NAME,1,1)||'.'||SUBSTR(EMP_MIDDLE_NAME,1,1)||'.'
                        FROM {0}.EMP E WHERE E.PER_NUM = {0}.GET_PER_NUM_FROM_USER_NAME(USER_NAME))) 
            OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC)||' '||
			FIRST_VALUE(TO_CHAR(DATE_APPROVAL,'DD.MM.YYYY')) 
                        OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC) USER_FIO
    from APPR where ROLE_NAME = 'STAFF_CHIEF_SUBDIV' and SIGN_APPROVAL_OLD_SUBDIV = 1) NOTE_PREV_CHIEF_SUBDIV, 
    (select DISTINCT FIRST_VALUE((SELECT EMP_LAST_NAME||' '||SUBSTR(EMP_FIRST_NAME,1,1)||'.'||SUBSTR(EMP_MIDDLE_NAME,1,1)||'.'
                        FROM {0}.EMP E WHERE E.PER_NUM = {0}.GET_PER_NUM_FROM_USER_NAME(USER_NAME))) 
            OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC)||' '||
			FIRST_VALUE(TO_CHAR(DATE_APPROVAL,'DD.MM.YYYY')) 
                        OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC) USER_FIO
        from APPR where ROLE_NAME = 'STAFF_CHIEF_BUREAU_TARIFF' and SIGN_APPROVAL_OLD_SUBDIV = 1) NOTE_PREV_CHIEF_BT, 
    (select DISTINCT FIRST_VALUE((SELECT EMP_LAST_NAME||' '||SUBSTR(EMP_FIRST_NAME,1,1)||'.'||SUBSTR(EMP_MIDDLE_NAME,1,1)||'.'
                        FROM {0}.EMP E WHERE E.PER_NUM = {0}.GET_PER_NUM_FROM_USER_NAME(USER_NAME))) 
            OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC)||' '||
			FIRST_VALUE(TO_CHAR(DATE_APPROVAL,'DD.MM.YYYY')) 
                        OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC) USER_FIO
    from APPR where ROLE_NAME = 'STAFF_CHIEF_SUBDIV' and SIGN_APPROVAL_OLD_SUBDIV = 0) NOTE_CHIEF_SUBDIV, 
    (select DISTINCT FIRST_VALUE((SELECT EMP_LAST_NAME||' '||SUBSTR(EMP_FIRST_NAME,1,1)||'.'||SUBSTR(EMP_MIDDLE_NAME,1,1)||'.'
                        FROM {0}.EMP E WHERE E.PER_NUM = {0}.GET_PER_NUM_FROM_USER_NAME(USER_NAME))) 
            OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC)||' '||
			FIRST_VALUE(TO_CHAR(DATE_APPROVAL,'DD.MM.YYYY')) 
                        OVER(PARTITION BY ROLE_NAME ORDER BY DATE_APPROVAL DESC) USER_FIO
        from APPR where ROLE_NAME = 'STAFF_CHIEF_BUREAU_TARIFF' and SIGN_APPROVAL_OLD_SUBDIV = 0) NOTE_CHIEF_BT,
	(select BD.BASE_DOC_NAME from {0}.BASE_DOC BD where BD.BASE_DOC_ID = PT.BASE_DOC_ID) BASE_DOC_NAME
from {0}.PROJECT_TRANSFER PT
join {0}.EMP E on PT.PER_NUM = E.PER_NUM
join {0}.TRANSFER TR on PT.FROM_POSITION = TR.TRANSFER_ID
join {0}.ACCOUNT_DATA AD on (TR.TRANSFER_ID = AD.TRANSFER_ID)
where PT.PROJECT_TRANSFER_ID = :p_PROJECT_TRANSFER_ID