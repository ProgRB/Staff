WITH TP_PER AS (
    SELECT * FROM (    
        SELECT TRANSFER_ID,SUBDIV_ID,DEGREE_ID,FORM_OPERATION_ID,trunc(date_transfer) DATE_TRANSFER,
                DECODE(TYPE_TRANSFER_ID,3,TRUNC(DATE_TRANSFER)+85999/86000,
                    LEAD(TRUNC(DATE_TRANSFER) - 1 / 86000,1,DATE '3000-01-01') OVER(PARTITION BY WORKER_ID ORDER BY DATE_TRANSFER))
                end_transfer,
                DATE_END_CONTR,TYPE_TRANSFER_ID,POS_ID,PER_NUM,SIGN_COMB,FROM_POSITION, DATE_HIRE,
                WORKER_ID, TR_DATE_ORDER
        FROM {0}.transfer t    
        WHERE T.DATE_HIRE <= :p_END_PERIOD and T.HIRE_SIGN = 1
        START WITH sign_cur_work = 1 OR type_transfer_id = 3
        CONNECT BY NOCYCLE PRIOR from_position = transfer_id) TP
    where TP.SUBDIV_ID = :p_SUBDIV_ID and TP.DATE_TRANSFER <= :p_END_PERIOD and TP.END_TRANSFER >= :p_BEGIN_PERIOD)
select distinct 0 as FL,
    MAX(TRANSFER_ID) KEEP(DENSE_RANK LAST ORDER BY DATE_TRANSFER) OVER (PARTITION BY WORKER_ID) TRANSFER_ID, 
    (select S.CODE_SUBDIV from {0}.SUBDIV S where S.SUBDIV_ID = T.SUBDIV_ID) CODE_SUBDIV,
    E.PER_NUM, 
    E.EMP_LAST_NAME, E.EMP_FIRST_NAME, E.EMP_MIDDLE_NAME, 	
    DECODE(MAX(SIGN_COMB) KEEP(DENSE_RANK LAST ORDER BY DATE_TRANSFER) OVER (PARTITION BY WORKER_ID),1,'X') SIGN_COMB 
from {0}.EMP E
join (select * from TP_PER ) T on E.PER_NUM = T.PER_NUM
ORDER BY E.PER_NUM